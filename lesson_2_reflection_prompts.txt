What happens when you initialize a repository? Why do you need to do it?

git init -- initializes the .git folder in a repository

How is the staging area different from the working directory and the repository?
What value do you think it offers?

it is a virtual folder that acts as an intermediary betweeen the working directory 
and the repository.

it make the work more presentable and less ambiguous.

How can you use the staging area to make sure you have one commit per logical
change?

By running the git diff-staged command to get the difference between the staging 
area and the most recent commit in the repository.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

when you would like to experiment on your current project or a shared project, when
you would like to create different versions of a project or when you would like to add a new feature
to the project

How do the diagrams help you visualize the branch structure?

use "git branch" to view the existing branches then,

git log --graph --oneline(how you want it to appear) branch1 branch2 (all the branches you want to visualise in the diagram)

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

file o == A,B,D file 2 == B,C,D file3 == B,D,E merged file == B,C,D,E 
because A was deleted.

What are the pros and cons of Git’s automatic merging vs. always doing merges
manually?